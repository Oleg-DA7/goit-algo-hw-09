## Висновок

Жадібні алгоритми, як правило, є швидшими за динамічне програмування, оскільки вони приймають локально оптимальні рішення на кожному кроці, не розглядаючи всі можливі комбінації. Це забезпечує меншу обчислювальну складність, зазвичай O(n) або O(n log n), порівняно з динамічним програмуванням, яке часто має складність O(n²) або вище через необхідність зберігання та обробки проміжних результатів. Наприклад, у тестах жадібний алгоритм виконався за 0.0000 секунд, тоді як динамічне програмування зайняло 0.0002 секунди. Однак жадібні алгоритми можуть не завжди гарантувати глобально оптимальне рішення, на відміну від динамічного програмування, яке забезпечує оптимальність за рахунок більшої витрати часу. Таким чином, вибір між цими підходами залежить від вимог до швидкості та точності розв’язання задачі.